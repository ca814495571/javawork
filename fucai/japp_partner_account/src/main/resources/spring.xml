<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:database_${cfg.env}.properties"/>

    <!-- <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${url}/{database}?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="${db_user}"/>
        <property name="password" value="${db_passwd}"/>
        <property name="poolPingEnabled" value="true"/>
        <property name="poolPingQuery" value="select now()"/>
        <property name="poolPingConnectionsNotUsedFor" value="25200000"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean> -->
    
    <bean id="dataSource" class="org.apache.ibatis.datasource.pooled.PooledDataSource">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${master_fucai_partner_account}?useUnicode=true&amp;characterEncoding=utf-8"/>
        <property name="username" value="${db_user}"/>
        <property name="password" value="${db_passwd}"/>
        <property name="poolPingEnabled" value="true"/>
        <property name="poolPingQuery" value="select now()"/>
        <property name="poolPingConnectionsNotUsedFor" value="600000"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="transactionTemplate"  
        class="org.springframework.transaction.support.TransactionTemplate">  
        <property name="transactionManager">  
            <ref local="txManager" />  
        </property>    
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>  
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>  
    </bean>  
    
    <!-- enable transaction annotation support -->
    <tx:annotation-driven transaction-manager="txManager" />

    <!-- 自动扫描注解方式的bean -->
    <context:component-scan base-package="com.cqfc"/>
    <context:component-scan base-package="com.jami"/>
    <task:annotation-driven executor="myExecutor" scheduler="myScheduler" />
    <task:executor id="myExecutor" pool-size="2" />
    <task:scheduler id="myScheduler" pool-size="10" />

    <!-- 自动扫描mybatis mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.cqfc" />
        <property name="markerInterface" value="com.jami.common.BaseMapper" />
    </bean>

    <!-- 打印性能日志 -->
    <!--
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="proxyTargetClass">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <idref bean="serviceActionMethodInterceptor"/>
            </list>
        </property>
        <property name="beanNames">
            <list>
                <value>*Service</value>
            </list>
        </property>
    </bean>
    -->

    <bean id="serviceActionMethodInterceptor" class="com.jami.interceptor.ServiceActionMethodInterceptor">
    </bean>

	<bean id="builder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
        <constructor-arg>
            <list>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_01}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_01}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_02}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_02}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_03}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_03}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_04}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_04}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_05}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_05}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_06}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_06}</value>
                    </constructor-arg>
                </bean>
                <bean class="java.net.InetSocketAddress">
                    <constructor-arg>
                        <value>${memcached_ip_07}</value>
                    </constructor-arg>
                    <constructor-arg>
                        <value>${memcached_port_07}</value>
                    </constructor-arg>
                </bean>
            </list>
        </constructor-arg>
    </bean>
	
    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数，默认为1 -->
        <property name="corePoolSize" value="10" />
        <!-- 最大线程数，默认为Integer.MAX_VALUE -->
        <property name="maxPoolSize" value="50" />
        <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE -->
        <property name="queueCapacity" value="1000" />
        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="300" />
        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
        </property>
    </bean>
    <bean id="memcachedClient" class="net.rubyeye.xmemcached.MemcachedClient" factory-bean="builder" factory-method="build" destroy-method="shutdown" />

</beans>
